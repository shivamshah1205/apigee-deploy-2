
name: Apigee CI with Maven

on: push
  
env:
  API_VERSION: googleapi 
  
  APIGEE_ORG: dark-garden-398406
  APIGEE_ENV: eval
  TEST_HOST: 34.111.231.70.nip.io

  # Retrieve Apigee UserID and password from repository settings (secrets)
  APIGEE_CREDS_USR: ${{ secrets.APIGEE_CREDS_USR }}
  APIGEE_CREDS_PSW: ${{ secrets.APIGEE_CREDS_PSW }} 
  
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}  

jobs:
  Apigee-Deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          create_credentials_file: true
          activate_credentials_file: true
          workload_identity_provider: projects/735293554042/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: my-service-account@dark-garden-398406.iam.gserviceaccount.com

  # Setup Maven & Maven Cache
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: 8

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2   


  # Generate SA key file from secret variable
      - name: Generate SA key file
        if: env.API_VERSION == 'googleapi'
        run: | 
          echo $GCP_SERVICE_ACCOUNT > sa.json



  # Deploy Apigee Config (Apigee [Config] Maven plugin)
      - name: mvn deploy config
        if: env.API_VERSION == 'googleapi'
        run:  |
          sed -i "s/target_apigee_env/$APIGEE_ENV/g" config.json
          cat sa.json
          mvn clean install -Ptest -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV -Dbearer=${{ steps.auth.outputs.access_token }}
          


